name: Cross-Platform Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        include:
          - os: ubuntu-latest
            ext: ""
            platform: linux
          - os: macos-latest
            ext: ""
            platform: darwin
          - os: windows-latest
            ext: ".exe"
            platform: windows
            
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          check-latest: true
          cache: true  # 启用Go模块缓存
  
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        shell: bash
  
      - name: Build binary
        run: |
          OUTPUT="avds-${{ env.VERSION }}-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.ext }}"
          echo "Building $OUTPUT..."
          GOOS=${{ matrix.platform }} GOARCH=${{ matrix.arch }} \
          go build -trimpath -ldflags "-s -w -X main.Version=${{ env.VERSION }}" -o $OUTPUT .
          echo "BINARY_NAME=$OUTPUT" >> $GITHUB_ENV
        shell: bash

      - name: Generate checksums (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          shasum -a 256 "${{ env.BINARY_NAME }}" > "${{ env.BINARY_NAME }}.sha256"
          echo "Generated SHA256 checksum for ${{ env.BINARY_NAME }}"
        shell: bash
        
      - name: Generate checksums (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $hash = $(certutil -hashfile "${{ env.BINARY_NAME }}" SHA256)[1] -replace " ",""
          Set-Content -Path "${{ env.BINARY_NAME }}.sha256" -Value "$hash  ${{ env.BINARY_NAME }}"
          echo "Generated SHA256 checksum for ${{ env.BINARY_NAME }}"
        shell: pwsh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: avds-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            ${{ env.BINARY_NAME }}
            ${{ env.BINARY_NAME }}.sha256
          retention-days: 3

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Display structure of downloaded files
        run: ls -R
    
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: AVDS ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          generate_release_notes: true
          files: |
            **/avds-*